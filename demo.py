#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã rurus_nalog - –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π Python –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è API "–ú–æ–π –Ω–∞–ª–æ–≥".

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:
- –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è 
- –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–æ–≤
- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–∫–∞—Ö
- –û—Ç–º–µ–Ω–∞ —á–µ–∫–æ–≤
"""

import asyncio
import json
from decimal import Decimal
from datetime import datetime

from rurus_nalog import Client
from rurus_nalog.dto.income import IncomeServiceItem, IncomeClient, IncomeType, CancelCommentType
from rurus_nalog.exceptions import UnauthorizedException, ValidationException


async def demo_authentication():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏."""
    print("üîê –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print("=" * 50)
    
    client = Client()
    
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—Å—Ç–æ—è—â–∏–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    fake_token = {
        "token": "demo_access_token", 
        "refreshToken": "demo_refresh_token",
        "profile": {
            "inn": "123456789012",
            "displayName": "Demo User",
            "email": "demo@example.com"
        }
    }
    
    await client.authenticate(json.dumps(fake_token))
    print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
    print(f"üìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {fake_token['profile']['displayName']}")
    print(f"üìã –ò–ù–ù: {fake_token['profile']['inn']}")
    print()
    
    return client


async def demo_income_creation(client: Client):
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–æ–≤."""
    print("üíº –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–æ–≤")
    print("=" * 50)
    
    # –í–º–µ—Å—Ç–æ —Ä–µ–∞–ª—å–Ω—ã—Ö HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–∫–∞–∂–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    print("üìù –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —á–µ–∫–∞:")
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        service_item = IncomeServiceItem(
            name="–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏",
            amount=Decimal("5000.00"),
            quantity=Decimal("1")
        )
        print(f"   –£—Å–ª—É–≥–∞: {service_item.name}")
        print(f"   –°—Ç–æ–∏–º–æ—Å—Ç—å: {service_item.amount} —Ä—É–±.")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {service_item.quantity}")
        print(f"   –ò—Ç–æ–≥–æ: {service_item.get_total_amount()} —Ä—É–±.")
        print("   ‚úÖ –î–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã!")
    except ValidationException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
    
    print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–∑–∏—Ü–∏—è–º–∏:")
    services = [
        IncomeServiceItem(name="–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–∞", amount=Decimal("25000.00"), quantity=Decimal("1")),
        IncomeServiceItem(name="–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", amount=Decimal("5000.00"), quantity=Decimal("3")),
    ]
    
    total = sum(item.get_total_amount() for item in services)
    print(f"   –ü–æ–∑–∏—Ü–∏–π: {len(services)}")
    print(f"   –û–±—â–∞—è —Å—É–º–º–∞: {total} —Ä—É–±.")
    
    print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–∞ –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞:")
    legal_client = IncomeClient(
        display_name="–û–û–û '–î–µ–º–æ –ö–æ–º–ø–∞–Ω–∏—è'",
        income_type=IncomeType.FROM_LEGAL_ENTITY,
        inn="1234567890",
        contact_phone="+79001234567"
    )
    print(f"   –ö–ª–∏–µ–Ω—Ç: {legal_client.display_name}")
    print(f"   –¢–∏–ø: {legal_client.income_type.value}")
    print(f"   –ò–ù–ù: {legal_client.inn}")
    print("   ‚úÖ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ –≤–∞–ª–∏–¥–Ω–æ!")
    print()


async def demo_receipt_operations(client: Client):
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å —á–µ–∫–∞–º–∏."""
    print("üßæ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å —á–µ–∫–∞–º–∏")
    print("=" * 50)
    
    demo_receipt_uuid = "demo-receipt-uuid-123"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ URL –¥–ª—è –ø–µ—á–∞—Ç–∏
    receipt_api = client.receipt()
    print_url = receipt_api.print_url(demo_receipt_uuid)
    print(f"üñ®Ô∏è  URL –¥–ª—è –ø–µ—á–∞—Ç–∏: {print_url}")
    
    # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã —á–µ–∫–∞
    print(f"\n‚ùå –û—Ç–º–µ–Ω–∞ —á–µ–∫–∞ {demo_receipt_uuid}:")
    print(f"   –ü—Ä–∏—á–∏–Ω–∞: {CancelCommentType.CANCEL.value}")
    print(f"   –í—Ä–µ–º—è –æ–ø–µ—Ä–∞—Ü–∏–∏: {datetime.now().isoformat()}")
    print("   ‚úÖ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–º–µ–Ω—ã –≥–æ—Ç–æ–≤—ã!")
    print()


async def demo_error_handling():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫."""
    print("üö® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫")
    print("=" * 50)
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ–≤–µ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–ª–µ–π:")
    
    try:
        # –ü—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏
        IncomeServiceItem(name="", amount=Decimal("100"), quantity=Decimal("1"))
    except ValueError as e:
        print(f"   ‚ùå –ü—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {e}")
    
    try:
        # –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å—É–º–º–∞
        IncomeServiceItem(name="–£—Å–ª—É–≥–∞", amount=Decimal("-100"), quantity=Decimal("1"))
    except Exception as e:
        print(f"   ‚ùå –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å—É–º–º–∞: {type(e).__name__}")
    
    try:
        # –ù—É–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        IncomeServiceItem(name="–£—Å–ª—É–≥–∞", amount=Decimal("100"), quantity=Decimal("0"))
    except Exception as e:
        print(f"   ‚ùå –ù—É–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {type(e).__name__}")
    
    try:
        # –ù–µ–≤–µ—Ä–Ω—ã–π –ò–ù–ù
        IncomeClient(inn="123")  # –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π
    except Exception as e:
        print(f"   ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ò–ù–ù: {type(e).__name__}")
    
    print("   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    print()


async def demo_data_serialization():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö."""
    print("üìä –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è IncomeServiceItem
    item = IncomeServiceItem(
        name="–î–µ–º–æ —É—Å–ª—É–≥–∞",
        amount=Decimal("1500.50"),
        quantity=Decimal("2")
    )
    
    serialized = item.model_dump()
    print("üìù –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ª—É–≥–∏:")
    print(f"   {json.dumps(serialized, ensure_ascii=False, indent=2)}")
    
    # –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è IncomeClient
    client_data = IncomeClient(
        contact_phone="+79001234567",
        display_name="–î–µ–º–æ –ö–ª–∏–µ–Ω—Ç",
        income_type=IncomeType.FROM_INDIVIDUAL,
        inn="123456789012"
    )
    
    serialized_client = client_data.model_dump()
    print("\nüë§ –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞:")
    print(f"   {json.dumps(serialized_client, ensure_ascii=False, indent=2)}")
    print()


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏."""
    print("üéØ RuRus Nalog - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π")
    print("üîó –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è Python –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è API '–ú–æ–π –Ω–∞–ª–æ–≥'")
    print("üìö –ü–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å PHP –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ shoman4eg/moy-nalog")
    print("=" * 60)
    print()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    client = await demo_authentication()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–æ–≤
    await demo_income_creation(client)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å —á–µ–∫–∞–º–∏
    await demo_receipt_operations(client)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    await demo_error_handling()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    await demo_data_serialization()
    
    print("üéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üìã –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ")


if __name__ == "__main__":
    asyncio.run(main())
