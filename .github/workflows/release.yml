name: Release to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run full test suite
      run: |
        echo "üß™ Running full test suite before release..."
        pytest tests/ -v --cov=rurus_nalog --cov-report=term-missing
    
    - name: Lint and format check
      run: |
        echo "üîç Running lint and format checks..."
        ruff check .
        black --check .
    
    - name: Type check
      run: |
        echo "üîé Running type checks..."
        mypy rurus_nalog/

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build source distribution and wheel
      run: |
        echo "üì¶ Building source distribution and wheel..."
        python -m build
    
    - name: Verify package
      run: |
        echo "üîç Verifying package integrity..."
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-packages
        path: dist/

  release-test-pypi:
    name: Release to Test PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-packages
        path: dist/
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install twine
      run: |
        python -m pip install --upgrade pip
        pip install twine
    
    - name: Publish to Test PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        echo "üöÄ Publishing to Test PyPI..."
        twine upload --repository testpypi dist/*

  release-pypi:
    name: Release to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-packages
        path: dist/
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install twine
      run: |
        python -m pip install --upgrade pip
        pip install twine
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo "üöÄ Publishing to PyPI..."
        twine upload dist/*
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Release ${{ github.ref_name }}
          
          ## What's Changed
          - See CHANGELOG.md for detailed changes
          
          ## Installation
          ```bash
          pip install rurus-nalog
          ```
          
          ## Documentation
          - [README.md](README.md)
          - [Examples](examples/)
        draft: false
        prerelease: false
